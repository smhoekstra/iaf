<digester-rules>
	<!-- $Id: digester-rules.xml,v 1.5.2.1 2007-10-24 09:39:49 europe\M00035F Exp $ -->
    
    <!-- Objects created using a factory-create-rule are created via the Spring Beans Factory. 
         Objects created using an object-create-rule are created directly by the Apache Digester,
         and do not pass by the Spring Beans Factory. -->
    
    <pattern value="IOS-Adaptering">
        <set-properties-rule/>
    </pattern>

    <pattern value="*/include">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.ConfigurationDigesterFactory"/>
        <set-properties-rule/>
        <set-top-rule methodname="include"/>
    </pattern>

    <pattern value="*/jmsRealms">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.JmsRealmsFactory"/>
        <set-properties-rule/>
    </pattern>
    <pattern value="*/jmsRealm">
        <object-create-rule classname="nl.nn.adapterframework.jms.JmsRealm"/>
        <set-properties-rule/>
        <set-next-rule methodname="registerJmsRealm"/>
    </pattern>

    <pattern value="*/sapSystem">
        <object-create-rule classname="nl.nn.adapterframework.extensions.sap.SapSystem"/>
        <set-properties-rule/>
        <set-top-rule methodname="registerItem"/>
    </pattern>


    <pattern value="*/adapter">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/>
        <set-properties-rule/>
        <set-next-rule methodname="registerAdapter"/>
    </pattern>
    <pattern value="*/pipeline">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/>
        <set-properties-rule/>
        <set-next-rule methodname="registerPipeLine"/>
    </pattern>
    <pattern value="*/errorMessageFormatter">
        <object-create-rule classname="nl.nn.adapterframework.errormessageformatters.XslErrorMessageFormatter" attrname="className"/> 
        <set-properties-rule/>
        <set-next-rule methodname="setErrorMessageFormatter"/>
    </pattern>

    <pattern value="*/receiver">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <set-properties-rule/>
        <set-next-rule methodname="registerReceiver"/>
    </pattern>
    <pattern value="*/sender">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.core.ISender" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="setSender"/>
    </pattern>
    <pattern value="*/postboxSender">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.core.IPostboxSender" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="setSender"/>
    </pattern>
    <pattern value="*/listener">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.ListenerFactory"/> 
        <set-properties-rule/>
        <set-next-rule methodname="setListener"/>
    </pattern>
    <pattern value="*/postboxListener">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.core.IPostboxListener" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="setListener"/>
    </pattern>
    <pattern value="*/errorSender">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.core.ISender" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="setErrorSender"/>
    </pattern>
    <pattern value="*/messageLog">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.core.ITransactionalStorage" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="setMessageLog"/>
    </pattern>
    <pattern value="*/inProcessStorage">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.core.ITransactionalStorage" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="setInProcessStorage"/>
    </pattern>
    <pattern value="*/errorStorage">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.core.ITransactionalStorage" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="setErrorStorage"/>
    </pattern>

    <pattern value="*/pipe">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory" /> 
        <set-properties-rule/>
        <set-next-rule methodname="addPipe" paramtype="nl.nn.adapterframework.core.IPipe"/>
    </pattern>
    <!-- forward element is on the pipeline / global-forward as well as on the
         pipe element -->
    <pattern value="*/forward">
        <object-create-rule classname="nl.nn.adapterframework.core.PipeForward"/> 
        <set-properties-rule/>
        <set-next-rule methodname="registerForward"/>
    </pattern>

    <pattern value="*/child">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="java.Object" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="registerChild"/>
    </pattern>

    <pattern value="*/pipeline/exits/exit">
        <object-create-rule classname="nl.nn.adapterframework.core.PipeLineExit"/> 
        <set-properties-rule/>
        <set-next-rule methodname="registerPipeLineExit"/>
     </pattern>
    
    <pattern value="*/scheduler/job">
         <object-create-rule classname="nl.nn.adapterframework.scheduler.JobDef"/> 
         <set-properties-rule/>
         <set-next-rule methodname="registerScheduledJob"/>
    </pattern>
   
    <pattern value="*/param">
		<object-create-rule classname="nl.nn.adapterframework.parameters.Parameter" />
		<set-properties-rule/>
		<set-next-rule methodname="addParameter" />
	</pattern>

	<!-- batch related rules -->
    <pattern value="*/manager">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.batch.IRecordHandlerManager" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="registerManager"/>
    </pattern>
    <pattern value="*/manager/flow">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.RecordHandlingFlowFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.batch.RecordHandlingFlow" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="addHandler"/>
    </pattern>
    <pattern value="*/recordHandler">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.batch.IRecordHandler" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="registerRecordHandler"/>
    </pattern>
    <pattern value="*/resultHandler">
        <factory-create-rule classname="nl.nn.adapterframework.configuration.GenericFactory"/> 
        <!--<object-create-rule classname="nl.nn.adapterframework.batch.IResultHandler" attrname="className"/> -->
        <set-properties-rule/>
        <set-next-rule methodname="registerResultHandler"/>
    </pattern>

    
</digester-rules>
