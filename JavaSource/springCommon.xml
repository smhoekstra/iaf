<?xml version="1.0" encoding="UTF-8"?>
<!--
  $Log: springCommon.xml,v $
  Revision 1.10  2008-02-13 13:44:58  europe\L190409
  typo in comment

  Revision 1.9  2008/01/11 14:57:28  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
  removed external pipe and pipeline executors

  Revision 1.8  2007/12/12 09:10:44  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
  disable validation temporarily

  Revision 1.7  2007/12/10 10:26:14  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
  added input/output validation

  Revision 1.6  2007/11/22 09:20:01  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
  update from ejb-branch

  Revision 1.3.2.3  2007/11/19 16:21:24  Tim van der Leeuw <tim.van.der.leeuw@ibissource.org>
  Lazy-load the transaction manager and wrap it in a proxy, to attempt creating the transaction-manager instance and looking up things in websphere JNDI at a point in time where it's not yet allowed.

  Revision 1.3.2.2  2007/10/24 15:04:44  Tim van der Leeuw <tim.van.der.leeuw@ibissource.org>
  Let runstate of receivers/listeners follow the state of WebSphere ListenerPorts if they are changed outside the control of IBIS.

  Revision 1.3.2.1  2007/10/24 09:39:49  Tim van der Leeuw <tim.van.der.leeuw@ibissource.org>
  Merge changes from HEAD

  Revision 1.5  2007/10/23 11:59:31  Tim van der Leeuw <tim.van.der.leeuw@ibissource.org>
  Fix mixup between 2 beans

  Revision 1.4  2007/10/23 09:23:57  Tim van der Leeuw <tim.van.der.leeuw@ibissource.org>
  Rename a couple of beans to match their names to what the configuration.GenericFactory would look them up by. Add bean for jms.JmsRealmFactory.

  Revision 1.3  2007/10/15 13:16:21  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
  removed JmsConfigurator

  Revision 1.1.2.3  2007/10/12 14:29:31  Tim van der Leeuw <tim.van.der.leeuw@ibissource.org>
  Several fixes and improvements to get EJB deployment mode running

  Revision 1.1.2.2  2007/10/10 14:30:45  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
  synchronize with HEAD (4.8-alpha1)

  Revision 1.2  2007/10/10 07:54:12  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
  Direct copy from Ibis-EJB:
  first version in HEAD

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
            ">

    <!-- IBIS Beans -->
    <bean name="configuration" class="nl.nn.adapterframework.configuration.Configuration"
        autowire="byName"
        init-method="init">
    </bean>
    
    <bean name="configurationDigester" class="nl.nn.adapterframework.configuration.ConfigurationDigester" 
        autowire="byName">
        <lookup-method name="createDigester" bean="digester"/>
    </bean>
    
    <bean name="digester" class="org.apache.commons.digester.Digester"
        autowire="byName" scope="prototype">
        <property name="substitutor">
            <bean class="org.apache.commons.digester.substitution.VariableSubstitutor">
                <constructor-arg ref="variableExpander"/>
            </bean>
        </property>
        <property name="useContextClassLoader" value="true"/>
        <property name="entityResolver">
            <bean class="nl.nn.adapterframework.util.ClassPathEntityResolver"/>
        </property>
    </bean>
    
    <bean name="variableExpander" class="nl.nn.adapterframework.configuration.IbisMultiSourceExpander">
        <property name="environmentFallback" value="false"/>
        <property name="sources">
            <list>
                <bean class="java.lang.System" factory-method="getProperties"/>
                <ref bean="appConstants"/>
            </list>
        </property>
    </bean>
    
    <bean name="appConstants" class="nl.nn.adapterframework.util.AppConstants"
        autowire="byName"
        factory-method="getInstance">
    </bean>
    
    <bean name="jmsRealmsFactory" class="nl.nn.adapterframework.jms.JmsRealmFactory"
        autowire="byName"
        factory-method="getInstance">
    </bean>
    
    
    <bean name="listenerContainer" class="nl.nn.adapterframework.receivers.PullingListenerContainer"
        autowire="byName" scope="prototype">
    </bean>
    
    <bean id="schedulerHelper" class="nl.nn.adapterframework.scheduler.SchedulerHelper"
        autowire="byName" lazy-init="true">
    </bean>
    
    <bean id="txManagerProxy" class="nl.nn.adapterframework.util.SpringTxManagerProxy">
    	<property name="realTxManagerBeanName"><idref bean="txManagerReal"/></property>
    </bean>
    
    <alias name="txManagerProxy" alias="txManager"/>
    
    <!-- Beans created from Configuration.xml, but prototyped here for
         extra dependencies which cannot be created otherwise.
         Bean names are prefixed with 'proto-' so that autowiring by
         name doesn't create unnessecary instances. -->
    <bean name="proto-adapter" class="nl.nn.adapterframework.core.Adapter"
        autowire="byName" scope="prototype">
    </bean>
    
    <bean name="proto-pipeline" class="nl.nn.adapterframework.core.PipeLine"
        autowire="byName" scope="prototype">
    </bean>
    
    <bean name="proto-receiver" class="nl.nn.adapterframework.receivers.GenericReceiver"
        autowire="byName" scope="prototype">
    </bean>
    
    <!-- Default pipe is a message-sending pipe -->
    <bean name="proto-pipe" class="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
        autowire="byName" scope="prototype">
    </bean>
    
    <bean name="proto-jmsListener" class="nl.nn.adapterframework.jms.JmsListener"
        autowire="byName" scope="prototype">
    </bean>
    
    <bean name="proto-RecordHandlingFlow" class="nl.nn.adapterframework.batch.RecordHandlingFlow"
        autowire="byName" scope="prototype">
    </bean>
<!--
    <bean name="proto-inputValidator" class="nl.nn.adapterframework.pipes.XmlValidator"
        autowire="byName" scope="prototype">
    </bean>
    <bean name="proto-outputValidator" class="nl.nn.adapterframework.pipes.XmlValidator"
        autowire="byName" scope="prototype">
    </bean>
-->    
</beans>
