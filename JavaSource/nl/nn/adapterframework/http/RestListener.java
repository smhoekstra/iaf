/*
 * $Log: RestListener.java,v $
 * Revision 1.5  2011-11-30 13:52:00  europe\m168309
 * adjusted/reversed "Upgraded from WebSphere v5.1 to WebSphere v6.1"
 *
 * Revision 1.1  2011/10/19 14:49:43  Peter Leeuwenburgh <peter.leeuwenburgh@ibissource.org>
 * Upgraded from WebSphere v5.1 to WebSphere v6.1
 *
 * Revision 1.3  2011/05/24 12:40:08  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
 * added physical destination name
 *
 * Revision 1.2  2011/05/23 13:13:36  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
 * added comments
 *
 * Revision 1.1  2011/05/19 15:11:27  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
 * first version of Rest-provider support
 *
 */
package nl.nn.adapterframework.http;

import nl.nn.adapterframework.configuration.ConfigurationException;
import nl.nn.adapterframework.core.HasPhysicalDestination;
import nl.nn.adapterframework.core.IPushingListener;

/**
 * Implementation of a {@link IPushingListener} that enables a {@link nl.nn.adapterframework.receivers.GenericReceiver}
 * to receive REST messages.
 * <p><b>Configuration:</b>
 * <table border="1">
 * <tr><th>attributes</th><th>description</th><th>default</th></tr>
 * <tr><td>className</td><td>nl.nn.adapterframework.http.RestListener</td><td>&nbsp;</td></tr>
 * <tr><td>{@link #setName(String) name}</td><td>name of the listener as known to the adapter</td><td>&nbsp;</td></tr>
 * <tr><td>{@link #setUriPattern(String) uriPattern}</td><td>uri pattern to match. </td><td>&nbsp;</td></tr>
 * <tr><td>{@link #setMethod(String) method}</td><td>method (e.g. GET or POST) to match</td><td>&nbsp;</td></tr>
 * <tr><td>{@link #setEtagSessionKey(String) etagSessionKey}</td><td>key of Session variable to store ETAG</td><td>&nbsp;</td></tr>
 * <tr><td>{@link #setContentTypeSessionKey(String) contentTypeSessionKey}</td><td>key of Session variable to requested content type</td><td>&nbsp;</td></tr>
 * <tr><td>{@link #setApplicationFaultsAsExceptions(boolean) applicationFaultsAsExceptions}</td><td>Controls the behavior when an application-fault occurrs: 
 *   <table>
 *     <tr><td><code>true</code></td><td>errors are returned as a HTTP internal server error (500)</td></tr>
 *     <tr><td><code>false</code></td><td>errors are returned in error message generated by the IBIS error message formatter</td></tr>
 *   </table>
 * </td><td>true</td></tr>
 * </table>
 * @author  Gerrit van Brakel 
 * @version Id
 */
public class RestListener extends PushingListenerAdapter implements HasPhysicalDestination {

	private String uriPattern;
	private String method;
	private String etagSessionKey;
	private String contentTypeSessionKey;

	/**
	 * initialize listener and register <code>this</code> to the JNDI
	 */
	public void configure() throws ConfigurationException {
		super.configure();
		RestServiceDispatcher.getInstance().registerServiceClient(this, getUriPattern(), method, etagSessionKey, contentTypeSessionKey);
	}

	public String getPhysicalDestinationName() {
		return "uriPattern: "+(getUriPattern()==null?"-any-":getUriPattern())+"; method: "+(getMethod()==null?"all":getMethod());
	}

	
	public String getUriPattern() {
		return uriPattern;
	}
	public void setUriPattern(String uriPattern) {
		this.uriPattern = uriPattern;
	}

	public String getMethod() {
		return method;
	}
	public void setMethod(String method) {
		this.method = method;
	}

	public String getEtagSessionKey() {
		return etagSessionKey;
	}
	public void setEtagSessionKey(String etagSessionKey) {
		this.etagSessionKey = etagSessionKey;
	}

	public String getContentTypeSessionKey() {
		return contentTypeSessionKey;
	}
	public void setContentTypeSessionKey(String contentTypeSessionKey) {
		this.contentTypeSessionKey = contentTypeSessionKey;
	}

}
