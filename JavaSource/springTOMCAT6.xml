<?xml version="1.0" encoding="UTF-8"?>
<!--
  $Log: springTOMCAT6.xml,v $
  Revision 1.8  2012-09-13 15:49:24  m00f069
  Added jndiContextPrefixPropertyPlaceholderConfigurer.
  Changed layout a bit.

  Revision 1.7  2012/09/07 13:15:16  Jaco de Groot <jaco.de.groot@ibissource.org>
  Messaging related changes:
  - Use CACHE_CONSUMER by default for ESB RR
  - Don't use JMSXDeliveryCount to determine whether message has already been processed
  - Added maxDeliveries
  - Delay wasn't increased when unable to write to error store (it was reset on every new try)
  - Don't call session.rollback() when isTransacted() (it was also called in afterMessageProcessed when message was moved to error store)
  - Some cleaning along the way like making some synchronized statements unnecessary
  - Made BTM and ActiveMQ work for testing purposes

  Revision 1.6  2011/12/08 14:06:16  Jaco de Groot <jaco.de.groot@ibissource.org>
  Made Tomcat work with the Spring DataSourceTransactionManager which will use the jdbc/<ibis name lower case> by default (Spring Tomcat configuration doesn't need to be changed manually anymore) (replaced JOTM as it didn't really work).

  Revision 1.5  2011/11/30 13:51:45  Peter Leeuwenburgh <peter.leeuwenburgh@ibissource.org>
  adjusted/reversed "Upgraded from WebSphere v5.1 to WebSphere v6.1"

  Revision 1.1  2011/10/19 14:49:47  Peter Leeuwenburgh <peter.leeuwenburgh@ibissource.org>
  Upgraded from WebSphere v5.1 to WebSphere v6.1

  Revision 1.3  2011/10/04 09:54:07  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
  added bean appServerJndiContextPrefix

  Revision 1.2  2010/02/03 15:00:21  Gerrit van Brakel <gerrit.van.brakel@ibissource.org>
  updated spring xsds to 2.5

  Revision 1.1  2009/11/06 08:03:37  Peter Leeuwenburgh <peter.leeuwenburgh@ibissource.org>
  cosmetic change

  Revision 1.1  2009/10/29 13:23:12  Peter Leeuwenburgh <peter.leeuwenburgh@ibissource.org>
  Run IBIS on Tomcat

-->
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation=
		"
		http://www.springframework.org/schema/beans xml/xsd/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util xml/xsd/spring-util-2.5.xsd
		"
	>

	<!-- Transaction stuff -->
	<!-- In order to properly handle 'Propagation: Supports', set property
		 'transactionSynchronization' to 'Synchronize on actual transaction'. -->

	<!-- Use Spring DataSourceTransactionManager which is good enough in case
		 only one data source needs to be managed by the transaction manager.
		 Otherwise a transaction manager like Atomikos, Bitronix or JOTM needs
		 to be used (will need some integration with Tomcat). In case no
		 database is needed the DataSourceTransactionManager can be used in
		 combination with an in-memory database like H2. -->
	<bean id="txManagerReal" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="defaultDataSource"/>
		</property>
		<property name="transactionSynchronization">
			<util:constant static-field="org.springframework.transaction.support.AbstractPlatformTransactionManager.SYNCHRONIZATION_ON_ACTUAL_TRANSACTION"/>
		</property>
	</bean>
	<bean id="defaultDataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource">
			<bean class="org.springframework.jndi.JndiObjectFactoryBean">
				<property name="jndiName" value="java:comp/env/jdbc/${instance.name.lc}"/>
			</bean>
		</property>
	</bean>
	<!-- Make the proxied data source available to the JdbcFacade -->
	<bean id="proxiedDataSources" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="jdbc/${instance.name.lc}">
					<ref bean="defaultDataSource"/>
				</entry>
			</map>
		</constructor-arg>
	</bean>

	<bean
		name="jndiContextPrefixPropertyPlaceholderConfigurer"
		class="nl.nn.adapterframework.configuration.OverwritePropertyPlaceholderConfigurer"
		autowire="byName"
		>
		<property name="propertyName" value="jndiContextPrefix"/>
		<property name="propertyValue" value="java:comp/env/"/>
	</bean>

</beans>
